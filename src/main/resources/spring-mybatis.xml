<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
    <!-- 包自动扫描 -->
    <context:component-scan base-package="com.yunxinlink.notes.api"/>
    
    <!-- 使用注解 -->
    <context:annotation-config/>
    
    <!-- 配置ehcache -->
    <cache:annotation-driven cache-manager="cacheManager"/>
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" >
    	<property name="cacheManager" ref="ehcache"/>
    </bean>
    
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" >
    	<property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations" value="classpath:jdbc.properties"/>
	</bean>

    <!-- api数据库连接池 -->
	<bean id="apiDataSource" destroy-method="close"
	        class="org.apache.commons.dbcp2.BasicDataSource">
	    <property name="driverClassName" value="${jdbc.api.driver}"/>
	    <property name="url" value="${jdbc.api.url}"/>
	    <property name="username" value="${jdbc.api.username}"/>
	    <property name="password" value="${jdbc.api.password}"/>
	    <property name="initialSize" value="${jdbc.initialSize}"/>
	    <property name="maxTotal" value="${jdbc.maxTotal}"/>
	    <property name="maxIdle" value="${jdbc.maxIdle}"/>
	    <property name="minIdle" value="${jdbc.minIdle}"/>
	    <property name="maxWaitMillis" value="${jdbc.maxWaitMillis}"/>
	</bean>
	
	<!-- session 工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="apiDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:com/yunxinlink/notes/api/mappers/*.xml" />
		<property name="typeAliasesPackage" value="com.yunxinlink.notes.api.model, com.yunxinlink.notes.api.dto" />
		<property name="typeHandlersPackage" value="com.yunxinlink.notes.api.typehandler" />
		
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yunxinlink.notes.api.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- freemarker -->
	<bean id="freeMarker" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
      <property name="templateLoaderPath" value="classpath:mailTemplate"/><!--指定模板文件目录-->   
      <property name="freemarkerSettings"><!-- 设置FreeMarker环境属性-->   
          <props>  
              <prop key="template_update_delay">1800</prop><!--刷新模板的周期，单位为秒-->   
              <prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->  
              <prop key="locale">zh_CN</prop><!-- 本地化设置-->  
          </props>  
      </property>  
    </bean>
    
    <!-- 邮件发送的服务 -->
    <bean id="emailService" class="com.yunxinlink.notes.api.service.impl.EmailService">
    	<property name="freeMarkerConfigurer" ref="freeMarker"/>
		
		<property name="host" value="smtp.mxhichina.com"></property>
		<property name="username" value="accounts@yunxinlink.com"></property>
		<property name="password" value="1q2w3e4r5t@"></property>
		<property name="fromAddress" value="accounts@yunxinlink.com"></property>
		<property name="nickname" value="云信笔记"></property>
		<property name="protocol" value="smtp"></property>
		<property name="defaultEncoding" value="utf-8"></property>
		<!-- 邮件的模板文件名 -->
		<property name="templeteName" value="reset-password.ftl"></property>
    </bean>
	
	<!-- similarly, don't forget the PlatformTransactionManager -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="apiDataSource"/>
    </bean>
	
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="load*" read-only="true"/>
            <tx:method name="has*" read-only="true"/>
            <tx:method name="is*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="select*" read-only="true" />
            <tx:method name="sendEmail" read-only="true" propagation="NOT_SUPPORTED"/>
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution
        of an operation defined by the FooService interface -->
    <aop:config>
        <aop:pointcut id="notesApiServiceOperation" expression="execution(* com.yunxinlink.notes.api.service..*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="notesApiServiceOperation"/>
    </aop:config>
</beans>