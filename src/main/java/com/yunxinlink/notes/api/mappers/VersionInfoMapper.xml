<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunxinlink.notes.api.dao.VersionDao">
	
	<!-- keyProperty="id" 这个id必须是实体的id，而不是数据表的主键id，否则，得不到正确的返回结果 -->
	<insert id="add" parameterType="VersionInfo" useGeneratedKeys="true" keyProperty="id">
	    insert into t_version_info (content, versionCode, versionName, platform, createTime, isMilestone, size, localPath, hash) values 
	    (#{content}, #{versionCode}, #{versionName}, #{platform}, #{createTime}, #{isMilestone}, #{size}, #{localPath}, #{hash}) 
	</insert>
	
	<delete id="delete" parameterType="VersionInfo">
	    delete from t_version_info where id = #{id}
	</delete>
	
	<select id="selectById" resultType="VersionInfo" parameterType="VersionInfo" >
	    select * from t_version_info where id = #{id}
	</select>
		
	<select id="selectVersions" resultType="VersionInfo" parameterType="java.util.Map" >
	    select * from t_version_info 
	    <trim prefix="where" prefixOverrides="AND | OR">
	    	<if test="platform != null">
	    		platform = #{platform}
	    	</if>
	    </trim>
	    order by createTime desc
	    <if test="offset != null and limit != null">
             limit #{offset},#{limit}
        </if>
	</select>
</mapper>