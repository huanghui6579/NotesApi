<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunxinlink.notes.api.dao.UserDao">
	
	<!-- keyProperty="id" 这个id必须是实体的id，而不是数据表的主键id，否则，得不到正确的返回结果 -->
	<insert id="add" parameterType="User" useGeneratedKeys="true" keyProperty="id">
	    insert into t_user (username, password, mobile, email, nickname, sid, avatar, gender, createTime, state) values 
	    (#{username}, #{password}, #{mobile}, #{email}, #{nickname}, #{sid}, #{avatar}, #{avatarHash}, #{gender}, #{createTime}, #{state})
	</insert>
	
	<delete id="delete" parameterType="User">
	    delete from t_user where id = #{id}
	</delete>
	
	<update id="update" parameterType="User">
		update t_user set 
		<trim prefixOverrides=",">
            <if test="username != null">
                username = #{username}
            </if>
            <if test="password != null">
                , password = #{password}
            </if>
            <if test="mobile != null">
                , mobile = #{mobile}
            </if>
            <if test="email != null">
                , email = #{email}
            </if>
            <if test="nickname != null">
                , nickname = #{nickname}
            </if>
            <if test="avatar != null">
                , avatar = #{avatar}
            </if>
            <if test="avatarHash != null">
                , avatarHash = #{avatarHash}
            </if>
            <if test="gender != null">
                , gender = #{gender}
            </if>
            <if test="state != null">
                , state = #{state}
            </if>
		</trim>
		where 
		<choose>
			<when test="id != null">
				id = #{id}
			</when>
			<otherwise>
				sid = #{sid}
			</otherwise>
		</choose>
	     
	</update>
	
	<select id="selectUsers" resultType="User">
	    select * from t_user
	</select>
	
	<select id="selectById" resultType="User" parameterType="User">
		select * from t_user where 
		<choose>
			<when test="id != null">
				id = #{id}
			</when>
			<otherwise>
				sid = #{sid}
			</otherwise>
		</choose>
	</select>
	
	<select id="selectUserByAccount" resultType="User" parameterType="Map">
		select * from t_user where 
		<choose>
			<when test="email != null">
				email = #{email}
			</when>
			<otherwise>
				mobile = #{mobile}
			</otherwise>
		</choose>
		and password = #{password}
	</select>
	
	<select id="selectCount" resultType="int" parameterType="User">
		select count(*) from t_user where 
		<choose>
			<when test="email != null">
				email = #{email}
			</when>
			<when test="username != null">
				username = #{username}
			</when>
			<otherwise>
				mobile = #{mobile}
			</otherwise>
		</choose>
	</select>
	
	<select id="selectAvatar" resultType="java.lang.String" parameterType="User">
		select avatar from t_user where 
		<choose>
			<when test="id != null">
				id = #{id}
			</when>
			<otherwise>
				sid = #{sid}
			</otherwise>
		</choose>
	</select>
	
	<!-- <select id="getUsersPage" resultMap="usermap" parameterType="UserDto" >
	    select * from t_user limit #{pageOffset}, #{pageSize}
	</select> -->
</mapper>